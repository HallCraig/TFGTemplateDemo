{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Information",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  // contains base configuration for the app builder framework
  "app.config": {
    "IdentityService": {
      "url": "http://dev-services2.ho.fosltd.co.za/IdentityService/v1/api/token",
      "endpoint": "api/token"
    },
    "Policies": {
      "FullAccess": "Domain Users"
    },
    "source": "Tfg.TFGTemplateDemo.Api",
    "KafkaEnvironment": "dev",
        "SourceSystem": "template"
      },
  // configuration for the WCf endpoints to be invoked
  "app.wcf": {
    "endpoints": [
      {
        "name": "ActiveDirectoryService",
        "address": "http://dev-services2.ho.fosltd.co.za/ActiveDirectory.1.1/ActiveDirectoryHelperService.svc",
        "binding": "basicHttp",
        "configuration": "BasicHttpBinding_IActiveDirectoryHelperService"
      }
    ],
    "bindings": [
      {
        "type": "basicHttpBinding",
        "name": "basicHttp",
        "closeTimeout": "00:01:00",
        "openTimeout": "00:01:00",
        "receiveTimeout": "00:10:00",
        "sendTimeout": "00:01:00",
        "allowCookies": false,
        "bypassProxyOnLocal": false,
        "hostNameComparisonMode": "StrongWildcard",
        "maxBufferSize": "2147483647",
        "maxBufferPoolSize": "524288",
        "maxReceivedMessageSize": "2147483647",
        "messageEncoding": "Text",
        "textEncoding": "UTF-8",
        "transferMode": "Buffered",
        "useDefaultWebProxy": true,
        "readerQuotas": {
          "maxDepth": "2000000",
          "maxStringContentLength": "2147483647",
          "maxArrayLength": "2147483647",
          "maxBytesPerRead": "2147483647",
          "maxNameTableCharCount": "2147483647"
        }
      }
    ]
  },
  "wcfCredentials": {
    "domain": "ho",
    "username": "svc_DevWebapp",
    "password": "5vc#d3vW39@pp"
  },
  // configuration for swagger endpoint
  "swagger": {
    "Enabled": true,
    "ReDocEnabled": false,
    "Name": "v1",
    "Title": "Tfg.TFGTemplateDemo.Api",
    "Version": "v1",
    "RoutePrefix": "swagger",
    "IncludeSecurity": false,
    "ExplicitEndpoint": "./swagger/v1/swagger.json"
  },
  // Kafka connection configuration
  "app.kafka": {
    "connectionName": "tfg_kafka_helper_tfgtemplatedemo",
    "conventionsCasing": "n/a",
    "Default_Source": "UnknownSource",
    "Default_ConsumerGroupId": "UnknownConsumerGroupId",
    "Default_Topic": "UnknownTopic",
    "Default_Message": "{}",
    "Default_ConsumerBatchSize": 10,
    "Default_BatchConsumerConnectionTimoutInMs": 5000,
    "logger": {
      "enabled": true,
      "level": 7
    },
    "context": {
      "enabled": true,
      "header": "message_context"
    },
    "spanContextHeader": "span_context",
    "throwExceptionOnPublishError": true,
    "KafkaClient": {
      "BootstrapServers": "dev-cluster-kafka-bootstrap-dev-kafka.apps.ocpprod.ho.fosltd.co.za:443",
      "SecurityProtocol": 1,
      "SslCaLocation": "\\\\fs4\\Kafka\\Strimzi\\ca-dev.crt"
      //"SslCaLocation": "/mnt/smb/ca.crt" // For Openshift
    }
  },
  // configuration of connection strings used for storage
  "app.persistence": {
    "connections": [
      {
        "connectionName": "tfg.tfgtemplatedemo",
        "connectionString": "Data Source=.\\SQLExpress;Initial Catalog=TFGTemplateDemo;Integrated Security=SSPI;"
        //"connectionString": "Data Source=.\\SQLExpress;Initial Catalog=TFGTemplateDemo;User Id=svc_tfgtemplatedemo_dev;Password=RedHat@OpenShift"
      }
    ]
  }


}

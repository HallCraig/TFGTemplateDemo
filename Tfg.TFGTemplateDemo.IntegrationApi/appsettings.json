{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*",
  // contains base configuration for the app builder framework
  "app.config": {
    "source": "Tfg.TFGTemplateDemo.IntegrationApi",
    // the below 3 configuration settings are used to uniquely identify this service to Kafka
    // as well as determine which Kafka environment to connect to
    "KafkaConsumerGroupId": "TFGTemplateDemoApiDevLocal", //unique identifier for the consumer
    "kafkaEnvironment": "dev",
        "sourceSystem": "template"
      },
  // Kafka connection configuration
  "app.kafka": {
    "connectionName": "tfg_kafka_helper_tfgtemplatedemo",
    "conventionsCasing": "n/a",
    "Default_Source": "UnknownSource",
    "Default_ConsumerGroupId": "UnknownConsumerGroupId",
    "Default_Topic": "UnknownTopic",
    "Default_Message": "{}",
    "Default_ConsumerBatchSize": 10,
    "Default_BatchConsumerConnectionTimoutInMs": 5000,
    "logger": {
      "enabled": true,
      "level": 7
    },
    "context": {
      "enabled": true,
      "header": "message_context"
    },
    "spanContextHeader": "span_context",
    "throwExceptionOnPublishError": true,
    "KafkaClient": {
      "BootstrapServers": "dev-cluster-kafka-bootstrap-dev-kafka.apps.ocpprod.ho.fosltd.co.za:443",
      "SecurityProtocol": 1,
      "SslCaLocation": "\\\\fs4\\Kafka\\Strimzi\\ca-dev.crt"
      //"SslCaLocation": "/mnt/smb/ca-dev.crt" // For Openshift
    }
  },
  // configuration of connection strings used for storage
  "app.persistence": {
    "connections": [
      {
        "connectionName": "tfg.tfgtemplatedemo",
        "connectionString": "Data Source=.\\SQLExpress;Initial Catalog=TFGTemplateDemo;User Id=svc_tfgtemplatedemo_dev;Password=RedHat@OpenShift"
      }
    ]
  }
}
